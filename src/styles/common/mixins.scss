@mixin button(
  $backgroundColor: $c-accentPrimary,
  $textColor: $c-textColorInverse
) {
  font-size: 1rem;
  font-weight: 500;
  color: $textColor;
  display: inline-block;
  padding: $gap-xxsmall;
  cursor: pointer;
  background-color: $backgroundColor;
  border: 0;
  border-radius: 6px;
  transition: 0.3s;

  &:hover {
    background-color: lighten($backgroundColor, 10%);
  }
}

@mixin myTransform($arg) {
  transform: $arg;
  -webkit-transform: $arg;
  -ms-transform: $arg;
}

@mixin myFlex() {
  $prefixes: (-webkit-box, -ms-flexbox, -webkit-flex, flex);
  @each $prefix in $prefixes {
    display: $prefix;
  }
}

@mixin flexDirection($arg) {
  $map: (
    row: (
      horizontal,
      normal,
      row,
    ),
    row-reverse: (
      horizontal,
      reverse,
      row-reverse,
    ),
    column: (
      vertical,
      normal,
      column,
    ),
    column-reverse: (
      vertical,
      reverse,
      column-reverse,
    ),
    initial: (
      initial,
      initial,
      initial,
    ),
    inherit: (
      inherit,
      inherit,
      inherit,
    ),
  );

  flex-direction: $arg;
  -webkit-box-orient: nth(map-get($map, $arg), 1);
  -webkit-box-direction: nth(map-get($map, $arg), 2);
  -ms-flex-direction: nth(map-get($map, $arg), 3);
}

@mixin icon($icon) {
  font-family: $font-fontAwesome;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-style: normal;
  font-weight: 900;
  line-height: 1;
  text-rendering: auto;
  display: inline-block;
  content: $icon;
  font-variant: normal;
}

@mixin font-size($target, $context: $font-size-base) {
  font-size: ($target / $context) * 1rem;
}

@mixin breakpoint($point) {
  $query-direction: "";
  $query-point: "";
  $query-size: "";

  @if str-index($point, "-up") {
    $query-direction: "min-width";
    $query-point: str-slice($point, 0, str-length($point) - str-length("-up"));
    $query-size: map-get($breakpoints, $query-point);
  } @else {
    @if str-index($point, "-down") {
      $query-point: str-slice(
        $point,
        0,
        str-length($point) - str-length("-down")
      );
    } @else {
      $query-point: $point;
    }

    $query-direction: "max-width";
    $query-size: map-get($breakpoints, $query-point) - 1px;
  }

  @media screen and (#{$query-direction}: #{$query-size}) {
    @content;
  }
}

@mixin btn-reset {
  padding: 0;
  background: none;
  border: 0;

  &:focus {
    outline: none;
  }
}

@mixin for-all-children {
  &,
  & * {
    @content;
  }
}

@mixin outline-on-focus($outline-color: black) {
  &:focus {
    outline: 1px solid $outline-color;
    outline-offset: 5px;
  }
}

@mixin link($link-color) {
  color: $link-color;

  &,
  &:active,
  &:visited {
    text-decoration: none;
  }

  &:hover {
    text-decoration: underline;
  }
}
